; Enter server name or server and instance name as servername or servername/instance
; To store set up functions, enter database name and schema name
; Enter demographic table name as sourceTable=database.schema.table or a sql sub-query
; Enter field names from the table e.g. patientid=PersonID, name1=firstname, name2=lastname, dob=birthdate, ssn=social security number
; If SSN is not to be included in hashing, then keep ssn=0
; If exception_flag is not to be included in hashing, then keep exception_flag=0
; Provide a temporary table name to store clean data e.g. temptablename=#temptabletostorecleanDATA (# followed by any name)
; Provide a table name to store hashes e.g. hashTable=database.schema.table
; each site should select randomdate (MM-DD-YYYY) for privateDate. These should not be shared with anyone
; provide the file name and paths to encryptedSaltfile and your privateKeyfile e.g. "T:\Users\sitename_project_1_salt.txt"
; If the hash output should be encrypted, put encrypthhashfile=1 (default is 0, not encrypted) and provide file name and path to encrypthashfilekey="F:\users\hashfileencryptkey.txt"
; Please ensure that patientid is unique for each record and there are no duplicates 


Server=
Database=
schema=
sourceTable=
patientid=
name1=
name2=
dob=
ssn=
exclusion=
temptablename=
hashTable=
privateDate=
encryptedSaltfile=
privateKeyfile=
encrypthhashfile=1
disambiguatepublicKey=
